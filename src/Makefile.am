##  Copyright 2006-2023 Carnegie Mellon University
##  See license information in LICENSE.txt.

##  Process this file with automake to produce Makefile.in
##  ------------------------------------------------------------------------
##  Makefile.am (source)
##  autotools build system for YAF
##  ------------------------------------------------------------------------
##  Authors: Brian Trammell
##  ------------------------------------------------------------------------
##  @DISTRIBUTION_STATEMENT_BEGIN@
##  YAF 3.0.0
##
##  Copyright 2023 Carnegie Mellon University.
##
##  NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING
##  INSTITUTE MATERIAL IS FURNISHED ON AN "AS-IS" BASIS. CARNEGIE MELLON
##  UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED,
##  AS TO ANY MATTER INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR
##  PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED FROM USE OF
##  THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF
##  ANY KIND WITH RESPECT TO FREEDOM FROM PATENT, TRADEMARK, OR COPYRIGHT
##  INFRINGEMENT.
##
##  Licensed under a GNU GPL 2.0-style license, please see LICENSE.txt or
##  contact permission@sei.cmu.edu for full terms.
##
##  [DISTRIBUTION STATEMENT A] This material has been approved for public
##  release and unlimited distribution.  Please see Copyright notice for
##  non-US Government use and distribution.
##
##  GOVERNMENT PURPOSE RIGHTS â€“ Software and Software Documentation
##  Contract No.: FA8702-15-D-0002
##  Contractor Name: Carnegie Mellon University
##  Contractor Address: 4500 Fifth Avenue, Pittsburgh, PA 15213
##
##  The Government's rights to use, modify, reproduce, release, perform,
##  display, or disclose this software are restricted by paragraph (b)(2) of
##  the Rights in Noncommercial Computer Software and Noncommercial Computer
##  Software Documentation clause contained in the above identified
##  contract. No restrictions apply after the expiration date shown
##  above. Any reproduction of the software or portions thereof marked with
##  this legend must also reproduce the markings.
##
##  This Software includes and/or makes use of Third-Party Software each
##  subject to its own license.
##
##  DM23-2317
##  @DISTRIBUTION_STATEMENT_END@
##  ------------------------------------------------------------------------

AM_CFLAGS = $(WARN_CFLAGS) $(DEBUG_CFLAGS)
AM_CPPFLAGS = $(YAF_CPPFLAGS) $(LTDLINCL) $(GLIB_CFLAGS) $(OPENSSL_CPPFLAGS) $(libfixbuf_CFLAGS)
AM_LDFLAGS = $(GLIB_LIBS) $(libfixbuf_LIBS)
LDADD = libyaf.la ../airframe/src/libairframe.la $(GLIB_LDADD)


SUBDIRS = applabel

# Do not include yaf.pod in PODFILES; is generated by configure
PODFILES = yafscii.pod yafdhcp.pod yaf.init.pod
man1_MANS =
if HAVE_POD2MAN
man1_MANS += yaf.1 yafscii.1 yafdhcp.1 yaf.init.1
endif
HTMLFILES = yaf.html yafscii.html yafdhcp.html yaf.init.html

EXTRA_DIST = $(PODFILES)

.pod.1:
	$(AM_V_GEN) $(POD2MAN) $(YAF_POD2MAN_ARGS) --section=1 $< $@

POD_TO_HTML = \
  { \
    file="$*.pod" ; \
    test -f "$${file}" || file="$(srcdir)/$${file}" ; \
    rm -f "$@.tmp" ; \
    $(POD2HTML) --noindex --title=$* --infile="$${file}" --outfile="$@.tmp" || \
      { rm -f "$@.tmp" ; exit 1; } ; \
    $(top_srcdir)/doc/add-header.pl "$@.tmp" || \
      { rm -f "$@.tmp" ; exit 1 ; } ; \
    test -f "$@.tmp" -a -s "$@.tmp" && mv "$@.tmp" "$@" || \
      { rm -f "$@.tmp" ; exit 1 ; } ; \
  }

pod_to_html_deps = Makefile $(top_srcdir)/doc/add-header.pl

.pod.html:
	$(AM_V_GEN) $(POD_TO_HTML)

yaf.html: yaf.pod $(pod_to_html_deps)
	$(AM_V_GEN) $(POD_TO_HTML)
yafscii.html: yafscii.pod $(pod_to_html_deps)
	$(AM_V_GEN) $(POD_TO_HTML)
yafdhcp.html: yafdhcp.pod $(pod_to_html_deps)
	$(AM_V_GEN) $(POD_TO_HTML)
yaf.init.html: yaf.init.pod $(pod_to_html_deps)
	$(AM_V_GEN) $(POD_TO_HTML)


#   These man pages are created from MAN.1.in files.  The rules to
#   make the MAN.1.in files are below.
#
man1_MANS += applabel.1 yafdpi.1

MAN_SED = sed \
  -e 's|\?\?PACKAGE_VERSION\?\?|$(PACKAGE_VERSION)|' \
  -e 's|\?\?sysconfdir\?\?|$(sysconfdir)|' \
  -e 's|\?\?pkglibdir\?\?|$(pkglibdir)|'

MAKE_MAN = \
  { \
    rm -f "$@.tmp" ; \
    srcdir='' ; \
    test -f "./$@.in" || srcdir=$(srcdir)/ ; \
    $(MAN_SED) "$${srcdir}$@.in" > "$@.tmp" ; \
    test -f "$@.tmp" -a -s "$@.tmp" && mv "$@.tmp" "$@" || \
      { rm -f "$@.tmp" ; exit 1 ; } ; \
  }

applabel.1: applabel.1.in Makefile
	$(AM_V_GEN) $(MAKE_MAN)
yafdpi.1: yafdpi.1.in Makefile
	$(AM_V_GEN) $(MAKE_MAN)


#   The MAN.1.in files (used to create MAN.1 files above) are created
#   from the markdown sources in $(top_srcdir)/doc; the HTML versions
#   are created by rules in $(top_srcdir)/doc
#
EXTRA_DIST += applabel.1.in yafdpi.1.in

PANDOC_MAN_ARGS = --standalone --from markdown-smart --to man --columns 80

if HAVE_PANDOC

# For NROFF files generated from Pandoc: If we have pandoc, use the
# following to create the foo.1.in file from the Markdown file
MD_TO_NROFF = \
  { \
    rm -f "$@.tmp" ; \
    test -n "$${file}" || { echo "file is not set" 2>&1 ; exit 1 ; } ; \
    $(PERL) $(top_srcdir)/doc/manify-md.pl --key=$@ "$${file}" | \
    $(PANDOC) $(PANDOC_MAN_ARGS) -o "$@.tmp" ; \
    test -f "$@.tmp" -a -s "$@.tmp" && mv "$@.tmp" "$@" || \
      { rm -f "$@.tmp" ; exit 1 ; } ; \
  }

else

# If pandoc is not found, use the existing foo.1.in file.  When
# creating a distribution, note that an outdated file is being used.
MD_TO_NROFF = \
  { \
    if test -n "$(distdir)" ; then \
      echo "" 1>&2 ; \
      echo "****************************************************" 1>&2 ; \
      echo "WARNING: Creating distribution with outdated file $@" 1>&2 ; \
      echo "****************************************************" 1>&2 ; \
      echo "" 1>&2 ; \
    fi ; \
  }

endif

md_to_nroff_deps = $(top_srcdir)/doc/manify-md.pl

applabel.1.in: $(top_srcdir)/doc/applabeling.md $(md_to_nroff_deps)
	$(AM_V_GEN) file="$(top_srcdir)/doc/applabeling.md" ; $(MD_TO_NROFF)

yafdpi.1.in: $(top_srcdir)/doc/deeppacketinspection.md $(md_to_nroff_deps)
	$(AM_V_GEN) file="$(top_srcdir)/doc/deeppacketinspection.md" ; $(MD_TO_NROFF)

copy-man-pages: $(HTMLFILES)
	$(MKDIR_P) $(top_builddir)/doc/html
	cp $(HTMLFILES) $(top_builddir)/doc/html

docs: $(man1_MANS) copy-man-pages

clean-docs:
	rm -f $(man1_MANS) $(HTMLFILES)

CLEANFILES = $(man1_MANS) $(HTMLFILES)

clean-local:
	rm -f pod2htm*.tmp

lib_LTLIBRARIES = libyaf.la
bin_PROGRAMS = yaf yafscii yafcollect

LIBS += $(LIBLTDL)

libyaf_la_SOURCES = yafcore.c yaftab.c yafrag.c decode.c picq.c ring.c yafdpi.c

if PLUGINENABLE
libyaf_la_SOURCES += yafhooks.c
endif

if P0FENABLE
libyaf_la_SOURCES += applabel/p0f/yfp0f.c
endif

if CYGWIN
libyaf_la_SOURCES += yafcygwin.c
endif

libyaf_la_LIBADD   = $(GLIB_LDADD) ../lua/src/liblua.la
libyaf_la_LDFLAGS  = $(AM_LDFLAGS) $(libp0f_LIBS) -version-info $(LIBCOMPAT) -release ${VERSION} $(libndpi_LIBS)
libyaf_la_CPPFLAGS = $(AM_CPPFLAGS) $(libp0f_CFLAGS) -DYAF_CONF_DIR='"$(sysconfdir)"' $(libndpi_CFLAGS) -DYAF_APPLABEL_PATH=\"${libdir}/yaf\"

yaf_SOURCES  = yaf.c yafstat.c yafdag.c yafcap.c yafout.c yaflush.c yafpcapx.c yafnfe.c yafpfring.c
yaf_LDADD    = $(LDADD) ../lua/src/liblua.la
yaf_LDFLAGS  = $(AM_LDFLAGS) $(libp0f_LIBS) -export-dynamic
yaf_CPPFLAGS = $(AM_CPPFLAGS) $(libp0f_CFLAGS)

yafscii_SOURCES = yafscii.c

yafcollect_SOURCES = yafcollect.c

noinst_HEADERS = yafdag.h yafcap.h yafpcapx.h yafstat.h yafout.h yaflush.h yafctx.h yafdpi.h yafnfe.h yafpfring.h infomodel.h

if P0FENABLE
noinst_HEADERS += applabel/p0f/p0ftcp.h applabel/p0f/yfp0f.h
endif

BUILT_SOURCES = infomodel.c infomodel.h
nodist_libyaf_la_SOURCES = infomodel.c infomodel.h
CLEANFILES += infomodel.c infomodel.h

RUN_MAKE_INFOMODEL = $(AM_V_GEN) \
 srcdir=$(top_builddir) ; \
 test -f $(top_builddir)/make-infomodel || srcdir=$(top_srcdir) ; \
 $(PERL) $${srcdir}/make-infomodel --package $(PACKAGE) --dir-name=$(top_builddir)/infomodel $(INFOMODEL_REGISTRY_PREFIXES)

infomodel.c : infomodel.h
infomodel.h : $(top_builddir)/make-infomodel Makefile
	$(RUN_MAKE_INFOMODEL)
